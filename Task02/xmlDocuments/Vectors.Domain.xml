<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vectors.Domain</name>
    </assembly>
    <members>
        <member name="T:Vectors.Domain.Vector">
            <summary>
            Class vector with overloading opertors.
            </summary>
        </member>
        <member name="F:Vectors.Domain.Vector._x">
            <summary>
            X readonly coordinate.
            </summary>
        </member>
        <member name="F:Vectors.Domain.Vector._y">
            <summary>
            Y readonly coordinate.
            </summary>
        </member>
        <member name="F:Vectors.Domain.Vector._z">
            <summary>
            Z readonly coordinate.
            </summary>
        </member>
        <member name="M:Vectors.Domain.Vector.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            This is a constructor for initializing x,y,z coordinates.
            </summary>
            <param name="x">x coordinate.</param>
            <param name="y">y coordinate.</param>
            <param name="z">z coordinate.</param>
        </member>
        <member name="P:Vectors.Domain.Vector.X">
            <summary>
            X coordinate of the vector.
            </summary>
        </member>
        <member name="P:Vectors.Domain.Vector.Y">
            <summary>
            Y coordinate of the vector.
            </summary>
        </member>
        <member name="P:Vectors.Domain.Vector.Z">
            <summary>
            Z coordinate of the vector.
            </summary>
        </member>
        <member name="P:Vectors.Domain.Vector.Magnitude">
            <summary>
            The length property of the vector.
            </summary>
        </member>
        <member name="P:Vectors.Domain.Vector.Normalized">
            <summary>
            Returns the normalized vector with a magnitude of 1.
            </summary>
        </member>
        <member name="P:Vectors.Domain.Vector.SqrMagnitude">
            <summary>
            Returns the squared length of the vector.
            </summary>
        </member>
        <member name="P:Vectors.Domain.Vector.Item(System.Int32)">
            <summary>
            Direct access to components of vector x, y, z using an index.
            </summary>
            <param name="i">The index of a vector component.</param>
            <returns>Returns x, y or z compoent.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Subtraction(Vectors.Domain.Vector,Vectors.Domain.Vector)">
            <summary>
            Operator -subtracts one vector from another.
            </summary>
            <param name="vectorOne">The first vector.</param>
            <param name="vectorTwo">The second vector.</param>
            <returns>Returns the vector after subtraction.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Equality(Vectors.Domain.Vector,Vectors.Domain.Vector)">
            <summary>
            Operator == Returns true if two vectors are approximately equal.
            </summary>
            <param name="vectorOne">The first vector.</param>
            <param name="vectorTwo">The second vector.</param>
            <returns>Returns bool after comparison.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Inequality(Vectors.Domain.Vector,Vectors.Domain.Vector)">
            <summary>
            Operator != returns true if vectors different.
            </summary>
            <param name="vectorOne">The first vector.</param>
            <param name="vectorTwo">The second vector.</param>
            <returns>Returns bool after comparison.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Addition(Vectors.Domain.Vector,Vectors.Domain.Vector)">
            <summary>
            Operator + adds two vectors.
            </summary>
            <param name="vectorOne">The first vector.</param>
            <param name="vectorTwo">The second vector.</param>
            <returns>Returns the vector after summation.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Multiply(Vectors.Domain.Vector,System.Double)">
            <summary>
            Operator *multiplies a vector by a number.
            </summary>
            <param name="vectorOne">The first vector.</param>
            <param name="number">A number.</param>
            <returns>Returns the vector after multiplication.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Multiply(System.Double,Vectors.Domain.Vector)">
            <summary>
            Operator * multiplies a number by a vector.
            </summary>
            <param name="number">A number.</param>
            <param name="vectorOne">The first vector.</param>
            <returns>Returns the vector after multiplication.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Division(Vectors.Domain.Vector,System.Double)">
            <summary>
            Operator / divides a vector by a number.
            </summary>
            <param name="vectorOne">The first vector.</param>
            <param name="number">A number.</param>
            <returns>Returns the vector after division.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.op_Division(System.Double,Vectors.Domain.Vector)">
            <summary>
            Operator / divides a number by a vector.
            </summary>
            <param name="number">The first number.</param>
            <param name="vectorOne">The first vector.</param>
            <returns>Returns the vector after division.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.Equals(System.Object)">
            <summary>
            Comparison of the properties of vectors.
            </summary>
            <param name="obj">Object.</param>
            <returns>Returns bool after comparison.</returns>
        </member>
        <member name="M:Vectors.Domain.Vector.GetHashCode">
            <summary>
            Calculate hash code.
            </summary>
            <returns>The total hesh code.</returns>
        </member>
    </members>
</doc>
